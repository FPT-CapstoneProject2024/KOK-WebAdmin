@page
@model WebAdmin.Pages.Item.IndexModel
@{
    ViewData["Title"] = "Index";
}
<!--Search-->
<div class="input-group">
    <form method="post" class="input-group">
        <input name="txt_search" type="search" class="form-control rounded" placeholder="Search" aria-label="Search" aria-describedby="search-addon" />
        <span class="input-group-text border-0" id="search-addon">
            <select class="form-control form-control-sm" aria-label="account filter" name="txt_filter">
                <option value="ItemId" selected>Item Id</option>
                <option value="ItemCode">Item Code</option>
                <option value="ItemName">Item Name</option>
                <option value="ItemDescription">Item Description</option>
                <option value="ItemType">Item Type</option>
                <option value="CreatorId">Creator Id</option>
                <option value="PrefabCode">Prefab Code</option>
                <option value="ItemBuyPrice">Item Buy Price</option>
                <option value="ItemSellPrice">Item Sell Price</option>
            </select>
        </span>
        <button asp-page-handler="Search" type="submit" class="btn btn-outline-success" data-mdb-ripple-init>Search</button>

    </form>
</div>
<!--End Search-->
@* <h1>Item</h1> *@

<p>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createItemModal">
        Create New
    </button>
</p>

<div class="table-container">

    <table class="table table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>Item Code</th>
                <th>Prefab Code</th>
                <th>Item Name</th>
                <th>Item Type</th>
                <th>Created Date</th>
                <th>Item Description</th>
                <th>Can Expire</th>
                <th>Can Stack</th>
                <th>Item Status</th>
                <th>Item Sell Price</th>
                <th>Item Buy Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.data.Results != null)
            {
                int count = 0;
                @foreach (var item in Model.data.Results)
                {
                    <tr>
                        @*                 <td>
                @Html.DisplayFor(modelItem => item.ItemId)
                </td> *@
                        <td>@(count += 1)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PrefabCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CanExpire)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CanStack)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemStatus)
                        </td>
                        @*                 <td>
                @Html.DisplayFor(modelItem => item.CreatorId)
                </td> *@
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemSellPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemBuyPrice)
                        </td>
                        <td>
                            @* <a asp-page="./Edit" asp-route-id="@item.ItemId">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.ItemId">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.ItemId">Delete</a> *@
                            <button type="button" class="btn btn-link" data-toggle="modal" data-target="#editItemModal" data-id="@item.ItemId">Edit</button>
                            <button type="button" class="btn btn-link" onclick="location.href='@Url.Page("./Details", new { id = item.ItemId })'">Details</button>
                            <button type="button" class="btn btn-link" onclick="location.href='@Url.Page("./Delete", new { id = item.ItemId })'">Delete</button>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
</div>

 <div>

    <!--End Table-->
    <!--Paging-->
    <div class="pagination">
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage - 1)" class="page-link">&laquo;</a></li>
        <li class="page-item active"><a asp-route-number="@Model.CurrentPage" class="page-link">@Model.CurrentPage</a></li>
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage + 1)" class="page-link">&raquo;</a></li>
    </div>
    <!--End Paging-->
</div>

<!-- Create Modal -->
<div class="modal fade" id="createItemModal" tabindex="-1" role="dialog" aria-labelledby="createItemModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createItemModalLabel">Create New Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- The content of the Create page will be loaded here -->

            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editItemModal" tabindex="-1" role="dialog" aria-labelledby="editItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg-custom" role="document">
        <div class="modal-content edit-modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editItemModalLabel">Edit Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="edit-modal-body">
                <!-- The content of the Edit page will be loaded here -->

            </div>
        </div>
    </div>
</div>

<script>
    $('#createItemModal').on('show.bs.modal', function (e) {
        var modal = $(this);
        // Load only the form content from the Create page
        $.get('@Url.Page("./Create")', function (data) {
            var formContent = $(data).find('form');
            modal.find('.modal-body').html(formContent);
        });
    });

    //Load Edit form content into the modal
    $('#editItemModal').on('show.bs.modal', function (e) {
        var button = $(e.relatedTarget);
        var itemId = button.data('id');
        var modal = $(this);

        //Load the edit form from the Edit page
        $.get('@Url.Page("./Edit", new { id = "__ID__" })'.replace('__ID__', itemId), function (data) {
            var formContent = $(data).find('form');
            modal.find('.edit-modal-body').html(formContent);
        });
    });
</script>

<style>
    .modal-dialog.modal-lg-custom {
        max-width: 500px;
    }

    .edit-modal-content {
        padding: 20px;
    }
</style>