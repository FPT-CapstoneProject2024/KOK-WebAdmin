@page
@model WebAdmin.Pages.Package.IndexModel
@{
    ViewData["Title"] = "Index";
}

<head>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        /* Collapsible Panel Styles */
        #rightPanel {
            height: 100%; /* Full height */
            width: 0; /* Start hidden */
            position: fixed;
            z-index: 1050; /* Above other elements */
            top: 0;
            right: 0;
            background-color: #343a40; /* Dark background */
            overflow-x: hidden; /* Disable horizontal scroll */
            padding-top: 60px; /* Space for content */
            transition: 0.5s; /* Smooth slide effect */
        }

            #rightPanel a {
                padding: 10px 20px;
                text-decoration: none;
                font-size: 18px;
                color: white;
                display: block;
                transition: 0.3s;
            }

                #rightPanel a:hover {
                    background-color: #575757;
                }

        .panel-btn {
            position: fixed;
            top: 20px;
            right: 20px;
            font-size: 20px;
            background-color: #28a745; /* Green color */
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            z-index: 1100;
        }

            .panel-btn:hover {
                background-color: #218838;
            }

        .close-btn {
            position: absolute;
            top: 15px;
            right: 25px;
            font-size: 36px;
        }
    </style>
</head>

<!-- Search -->
<div class="input-group">
    <form method="post" class="input-group">
        <input name="txt_search" type="search" class="form-control rounded" placeholder="Search..." value="@ViewBag.filter_search" aria-label="Search" aria-describedby="search-addon" />
        <span class="input-group-text border-0" id="search-addon">
        </span>
        <button asp-page-handler="Search" type="submit" class="btn btn-outline-success" data-mdb-ripple-init>Search</button>
    </form>
</div>
<!-- End Search -->
<br/>
<p>
    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#createPackageModal">
        Tạo Gói Mới
    </button>
</p>

<div class="table-container">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>Package Name</th>
                <th>Description</th>
                <th>Money Amount</th>
                <th>Star Number</th>
                <th>Status</th>
                <th>Created Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.data.Results != null)
            {
                int count = 0;
                @foreach (var package in Model.data.Results)
                {
                    <tr>
                        <td>@(count += 1)</td>
                        <td>@Html.DisplayFor(modelItem => package.PackageName)</td>
                        <td>@Html.DisplayFor(modelItem => package.Description)</td>
                        <td>@Html.DisplayFor(modelItem => package.MoneyAmount)</td>
                        <td>@Html.DisplayFor(modelItem => package.StarNumber)</td>
                        <td>@Html.DisplayFor(modelItem => package.Status)</td>
                        <td>@Html.DisplayFor(modelItem => package.CreatedDate)</td>
                        <td>
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editPackageModal" data-id="@package.PackageId">Chỉnh sửa</button>
                            <button type="button" class="btn btn-dark" onclick="location.href='@Url.Page("./Details", new { id = package.PackageId })'">Chi tiết</button>
                            <button type="button" class="btn btn-google-plus" onclick="location.href='@Url.Page("./Delete", new { id = package.PackageId })'">Xóa</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div>
    <!-- Paging -->
    <div class="pagination">
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage - 1)" class="page-link">&laquo;</a></li>
        <li class="page-item active"><a asp-route-number="@Model.CurrentPage" class="page-link">@Model.CurrentPage</a></li>
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage + 1)" class="page-link">&raquo;</a></li>
    </div>
    <!-- End Paging -->
</div>

<!-- Right-side Collapsible Panel -->
<div id="rightPanel">
    <a href="javascript:void(0)" class="close-btn" onclick="togglePanel()">&times;</a>
    <a href="#">Link 1</a>
    <a href="#">Link 2</a>
    <a href="#">Link 3</a>
    <!-- Add more content as needed -->
</div>

<!-- Button to open the panel -->
<button class="panel-btn" onclick="togglePanel()">☰</button>

<!-- Create Modal -->
<div class="modal fade" id="createPackageModal" tabindex="-1" role="dialog" aria-labelledby="createPackageModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPackageModalLabel">Create New Package</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- The content of the Create page will be loaded here -->
                
            </div>            
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editPackageModal" tabindex="-1" role="dialog" aria-labelledby="editPackageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg-custom" role="document">
        <div class="modal-content edit-modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editPackageModalLabel">Edit Package</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="edit-modal-body">
                <!-- The content of the Edit page will be loaded here -->

            </div>
        </div>
    </div>
</div>

<script>
    // Function to toggle the panel
    function togglePanel() {
        const panel = document.getElementById("rightPanel");
        if (panel.style.width === "250px") {
            closePanel();
        } else {
            openPanel();
        }
    }

    // Function to open the panel
    function openPanel() {
        document.getElementById("rightPanel").style.width = "250px";
        // Add an event listener to detect clicks outside the panel
        document.addEventListener("click", closeOnClickOutside);
    }

    // Function to close the panel
    function closePanel() {
        document.getElementById("rightPanel").style.width = "0";
        // Remove the event listener when the panel is closed
        document.removeEventListener("click", closeOnClickOutside);
    }

    // Function to close the panel if the user clicks outside of it
    function closeOnClickOutside(event) {
        const panel = document.getElementById("rightPanel");
        if (!panel.contains(event.target) && event.target.className !== "panel-btn") {
            closePanel();
        }
    }

    $(document).ready(function () {
        $('#createPackageModal').on('show.bs.modal', function (e) {
            var modal = $(this);
            // Load only the form content from the Create page
            $.get('@Url.Page("./Create")', function (data) {
                var formContent = $(data).find('form');
                modal.find('.modal-body').html(formContent);

                // Attach an event listener to the form submit event
                modal.find('form').on('submit', function (e) {
                    e.preventDefault(); // Prevent normal form submission

                    // Use AJAX to submit the form data
                    $.ajax({
                        type: $(this).attr('method'),
                        url: $(this).attr('action'),
                        data: $(this).serialize(),
                        success: function (response) {
                            if (response.success) {
                                // Close the modal and remove the backdrop
                                modal.modal('hide');
                                $('.modal-backdrop').remove(); // Ensure the backdrop is removed

                                // Show the success popup
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'The package was created successfully.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        // Reload the page when the user presses OK
                                        location.reload();
                                    }
                                });
                            } else {
                                // Handle the failure case
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'There was a problem creating the package.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });

                                // Close the modal and remove the backdrop
                                modal.modal('hide');
                                $('.modal-backdrop').remove();
                            }
                        },
                        error: function () {
                            // Close the modal and remove the backdrop in case of an error
                            modal.modal('hide');
                            $('.modal-backdrop').remove();

                            Swal.fire({
                                title: 'Error!',
                                text: 'There was a problem with the request.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                });
            });
        });
    });

    //Load Edit form content into the modal
    $('#editPackageModal').on('show.bs.modal', function (e) {
        var button = $(e.relatedTarget);
        var packageId = button.data('id');
        var modal = $(this);

        //Load the edit form from the Edit page
        $.get('@Url.Page("./Edit", new { id = "__ID__" })'.replace('__ID__', packageId), function (data) {
            var formContent = $(data).find('form');
            modal.find('.edit-modal-body').html(formContent);

            // Attach an event listener to the form submit event
            modal.find('form').on('submit', function (e) {
                e.preventDefault(); // Prevent normal form submission

                // Use AJAX to submit the form data
                $.ajax({
                    type: $(this).attr('method'),
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Close the modal and remove the backdrop
                            modal.modal('hide');
                            $('.modal-backdrop').remove(); // Ensure the backdrop is removed

                            // Show the success popup
                            Swal.fire({
                                title: 'Success!',
                                text: 'The package was edited successfully.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Reload the page when the user presses OK
                                    location.reload();
                                }
                            });
                        } else {
                            // Handle the failure case
                            Swal.fire({
                                title: 'Error!',
                                text: 'There was a problem creating the package.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });

                            // Close the modal and remove the backdrop
                            modal.modal('hide');
                            $('.modal-backdrop').remove();
                        }
                    },
                    error: function () {
                        // Close the modal and remove the backdrop in case of an error
                        modal.modal('hide');
                        $('.modal-backdrop').remove();

                        Swal.fire({
                            title: 'Error!',
                            text: 'There was a problem with the request.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });
        });
    });
</script>

<style>
    .modal-dialog.modal-lg-custom {
        max-width: 500px;
    }

    .edit-modal-content {
        padding: 20px;
    }
</style>
