@page
@using WebAdmin.DTOModels
@model WebAdmin.Pages.Report.IndexModel
@{
}
<head>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- FontAwesome icons-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>

<!-- Search -->
@* <div class="input-group">
    <form method="post" class="input-group">
        <input asp-for="search" type="search" class="form-control rounded" placeholder="Tìm Kiếm..." aria-label="Search" aria-describedby="search-addon" />
        <span class="input-group-text border-0" id="search-addon">
        </span>
        <button asp-page-handler="Search" type="submit" class="btn btn-outline-success" data-mdb-ripple-init>Tìm Kiếm</button>
    </form>
    <div style="margin-top:20px;">
        <button class="btn btn-outline-info" id="advancedSearchBtn" data-mdb-ripple-init>Tìm Kiếm Nâng Cao</button>
    </div>

</div> *@
<!-- Search Bar -->
<div>
    <form method="post" class="input-group">
        <input asp-for="search" type="search" class="form-control rounded" placeholder="Tìm Kiếm..." aria-label="Search" aria-describedby="search-addon" />
        <span class="input-group-text border-0" id="search-addon"></span>
        <button asp-page-handler="Search" type="submit" class="btn btn-outline-success" data-mdb-ripple-init>Tìm Kiếm</button>
    </form>

    <!-- Toggle Button for Advanced Search in a new row -->
    <div style="margin-top: 10px; text-align: left; margin-bottom: 20px;">
        <button class="btn btn-outline-info" id="toggleAdvancedSearch">Tìm Kiếm Nâng Cao</button>
    </div>
</div>


<!-- Advanced Search Panel (Initially Hidden) -->


<style>
    .advanced-search-container {
        margin-bottom: 20px;
    }

    /* Adjusting the width of the container */
    .custom-card-width {
        width: 100%; /* Change this value as needed */
        max-width: 1200px; /* Optional: Set a max-width */
        /* margin: 0 auto; /* Center the container horizontally */ */
    }

    .card {
        border-radius: 10px;
        padding: 20px;
        background-color: #ffffff;
        border: 1px solid #ddd;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .card-title {
        font-weight: bold;
        font-size: 1.2rem;
        margin-bottom: 15px;
    }

    .form-label {
        font-size: 0.9rem;
        font-weight: 500;
        margin-bottom: 5px;
        display: block;
    }

    .form-control,
    .form-select {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    input[type="checkbox"] {
        margin-left: 5px;
        transform: scale(1.2);
    }

    .btn-success-search {
        width: 100%;
        background-color: #28a745;
        color: #fff;
        border: none;
        padding: 10px;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .btn-success-search:hover {
            background-color: #218838;
        }

    .row {
        margin-bottom: 15px;
    }

    .col-md-4 {
        padding-right: 15px;
        padding-left: 15px;
    }
</style>

<div id="advancedSearchPanel" class="advanced-search-container" style="display: none; margin-top: 20px;">
    <div class="modal-content">
        @* <span class="close">&times;</span> *@
        <div class="formAdvanced">
            <form asp-page-handler="SearchAdvanced" method="post" class="input-group">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div>
                    <label class="control-label">Loại Báo Cáo</label>
                    <input asp-for="filter.ReportCategory" class="form-control-sm" />
                    <span asp-validation-for="filter.ReportCategory" class="text-danger"></span>
                </div>
                <div>
                    <label class="control-label">Lý Do</label>
                    <input asp-for="filter.Reason" class="form-control-sm" />
                    <span asp-validation-for="filter.Reason" clas="text-danger"></span>
                </div>
                <div>
                    <label class="control-label">Ngày Tạo</label>
                    <input asp-for="filter.CreateTime" class="form-control-sm" />
                    <span asp-validation-for="filter.CreateTime" clas="text-danger"></span>
                </div>
                <div>
                    <label class="control-label">Tiêu Đề</label>
                    <input asp-for="filter.PostCaption" class="form-control-sm" />
                    <span asp-validation-for="filter.PostCaption" clas="text-danger"></span>
                </div>


                <div>
                    <label class="control-label">Trạng Thái</label>
                    <select asp-for="filter.Status">
                        <option value="PROCCESSING">Đang Xử Lý</option>
                        <option value="COMPLETE">Hoàn Tất</option>
                        <option value="CANCELED">Hủy Bỏ</option>
                    </select>
                </div>
                
                <div>
                    <label class="control-label">Kiểu Báo Cáo</label>
                    <select asp-for="filter.ReportType">
@*                         <option value="INAPPROPRIATE_CONTENT">
                            Nội Dung Không Phù Hợp
                        </option>
                        <option value="SPAM">
                            Thư Rác
                        </option>
                        <option value="HARASSMENT">
                            Quấy Rối
                        </option>
                        <option value="VIOLENCE">Bạo Lực</option>
                        <option value="HATE_SPEECH">Phát Ngôn Thù Ghét</option>
                        <option value="SELF_HARM">Tự Gây Hại</option>
                        <option value="TERRORISM">Khủng Bố</option>
                        <option value="NUDITY">Ảnh Khoả Thân</option>
                        <option value="GRAPHIC_CONTENT">Nội Dung Rùng Rợn</option>
                        <option value="MISINFORMATION">Thông Tin Sai Lệch</option> *@

                        @for (int e = 0; e < ReportCategory.List.Count(); e++)
                        {
                            <option value="@e">@ReportCategory.List[e]</option>
                        }
                    </select>
                </div>

                <button class="btn btn-google-plus" type="submit">Lưu Thông Tin</button>


            </form>
        </div>

    </div>

</div>
<!-- End Search -->

<div class="table-container">
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>
                    @Html.DisplayNameFor(model => model.data.Results[0].ReportCategory)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.data.Results[0].Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.data.Results[0].Reason)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.data.Results[0].ReportType)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.data.Results[0].PostCaption)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.data.Results != null)
            {
                int count = 1;
                @foreach (var item in Model.data.Results)
                {
                    <tr>
                        <td>@(count += 1)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReportCategory)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Reason)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.ReportType)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.PostCaption)
                        </td>


                        <td>

                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editReportModal" data-id="@item.ReportId"> <i class="fa-solid fa-pen" style="font-size: 30px;color: #fff;"></i></button>
                            <a href="javascript:void(0);" class="btn btn-dark" data-toggle="modal" data-target="#detailReportModal" data-id="@item.ReportId"><i class="fa-solid fa-file-lines" style="font-size: 30px;color: #fff;"></i></a>
                            @* <button type="button" class="btn btn-google-plus" onclick="location.href='@Url.Page("./Delete", new { id = item.ReportId })'"><i class="fa-regular fa-trash-can" style="font-size: 30px; color: #fff;"></i></button> *@
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
</div>
    <!-- Paging -->
    <div class="pagination">
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage - 1)" class="page-link">&laquo;</a></li>
        <li class="page-item active"><a asp-route-number="@Model.CurrentPage" class="page-link">@Model.CurrentPage</a></li>
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage + 1)" class="page-link">&raquo;</a></li>
    </div>
    <!-- End Paging -->
</div>

<!-- Create Modal -->
<div class="modal fade" id="createReportModal" tabindex="-1" role="dialog" aria-labelledby="createReportModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createReportModalLabel">Create New Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- The content of the Create page will be loaded here -->

            </div>
        </div>
    </div>
</div>



<div id="chat-container">
    <div id="chat-header">
        <h3>Chat</h3>
        <button onclick="toggleChat()">Mở/Tắt</button>
    </div>
    <div id="chat-box" class="hidden">
        <div id="messages">
            <!-- Tin nhắn sẽ xuất hiện ở đây -->
        </div>
        <input type="text" id="chat-input" placeholder="Nhập tin nhắn..." onkeypress="sendMessage(event)" />
    </div>
</div>



<!-- Edit Modal -->
<div class="modal fade" id="editReportModal" tabindex="-1" role="dialog" aria-labelledby="editReportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg-custom" role="document">
        <div class="modal-content edit-modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editReportModalLabel">Edit Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="edit-modal-body">
                <!-- The content of the Edit page will be loaded here -->

            </div>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailReportModal" tabindex="-1" role="dialog" aria-labelledby="detailModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-modal-width" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailModalLabel">Report Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body detail-modal-body">
                <!-- Nội dung chi tiết sẽ được tải vào đây -->
            </div>
        </div>
    </div>
</div>


<script>


    function toggleChat() {
        const chatBox = document.getElementById("chat-box");
        chatBox.classList.toggle("visible");
    }

    function sendMessage(event) {
        if (event.key === "Enter") {
            const input = document.getElementById("chat-input");
            const message = input.value.trim();
            if (message) {
                const messages = document.getElementById("messages");
                const messageElement = document.createElement("div");
                messageElement.textContent = message;
                messages.appendChild(messageElement);
                input.value = "";

                // Gửi tin nhắn tới server (AJAX)
                sendToServer(message);
            }
        }
    }

    function sendToServer(message) {
        fetch("/Chat/SendMessage", {
            method: "POST",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ message: message })
        })
            .then(response => response.json())
            .then(data => {
                console.log("Tin nhắn đã gửi:", data);
            })
            .catch(error => {
                console.error("Lỗi khi gửi tin nhắn:", error);
            });
    }



    document.getElementById('toggleAdvancedSearch').addEventListener('click', function () {
        const panel = document.getElementById('advancedSearchPanel');
        const isVisible = panel.style.display !== 'none';

        // Toggle visibility
        panel.style.display = isVisible ? 'none' : 'block';

        // Optionally change button text
        this.innerText = isVisible ? 'Tìm Kiếm Nâng Cao' : 'Ẩn Tìm Kiếm Nâng Cao';
    });

    // Load Detail form content into the modal
    $(document).ready(function () {
        $('#detailReportModal').on('show.bs.modal', function (e) {
            var button = $(e.relatedTarget);
            var ReportId = button.data('id');
            var modal = $(this);

            // Tải nội dung từ trang Details và chỉ lấy phần thân của nội dung
            $.get('@Url.Page("/Report/Details", new { id = "__ID__" })'.replace('__ID__', ReportId), function (data) {
                var detailContent = $(data).find('.details').html(); // Lấy phần nội dung chính
                modal.find('.detail-modal-body').html(detailContent);
            });
        });
    });


    $(document).ready(function () {
        $('#createReportModal').on('show.bs.modal', function (e) {
            var modal = $(this);
            // Load only the form content from the Create page
            $.get('@Url.Page("./Create")', function (data) {
                var formContent = $(data).find('form');
                modal.find('.modal-body').html(formContent);

                // Attach an event listener to the form submit event
                modal.find('form').on('submit', function (e) {
                    e.preventDefault(); // Prevent normal form submission

                    // Use AJAX to submit the form data
                    $.ajax({
                        type: $(this).attr('method'),
                        url: $(this).attr('action'),
                        data: $(this).serialize(),
                        success: function (response) {
                            if (response.success) {
                                // Close the modal and remove the backdrop
                                modal.modal('hide');
                                $('.modal-backdrop').remove(); // Ensure the backdrop is removed

                                // Show the success popup
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'The report was created successfully.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        // Reload the page when the user presses OK
                                        location.reload();
                                    }
                                });
                            } else {
                                // Handle the failure case
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'There was a problem creating the report.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });

                                // Close the modal and remove the backdrop
                                modal.modal('hide');
                                $('.modal-backdrop').remove();
                            }
                        },
                        error: function () {
                            // Close the modal and remove the backdrop in case of an error
                            modal.modal('hide');
                            $('.modal-backdrop').remove();

                            Swal.fire({
                                title: 'Error!',
                                text: 'There was a problem with the request.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                });
            });
        });
    });

    //Load Edit form content into the modal
    $('#editReportModal').on('show.bs.modal', function (e) {
        var button = $(e.relatedTarget);
        var reportId = button.data('id');
        var modal = $(this);

        //Load the edit form from the Edit page
        $.get('@Url.Page("./Edit", new { id = "__ID__" })'.replace('__ID__', reportId), function (data) {
            var formContent = $(data).find('form');
            modal.find('.edit-modal-body').html(formContent);

            // Attach an event listener to the form submit event
            modal.find('form').on('submit', function (e) {
                e.preventDefault(); // Prevent normal form submission

                // Use AJAX to submit the form data
                $.ajax({
                    type: $(this).attr('method'),
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Close the modal and remove the backdrop
                            modal.modal('hide');
                            $('.modal-backdrop').remove(); // Ensure the backdrop is removed

                            // Show the success popup
                            Swal.fire({
                                title: 'Success!',
                                text: 'The report was edited successfully.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Reload the page when the user presses OK
                                    location.reload();
                                }
                            });
                        } else {
                            // Handle the failure case
                            Swal.fire({
                                title: 'Error!',
                                text: 'There was a problem editing the report.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });

                            // Close the modal and remove the backdrop
                            modal.modal('hide');
                            $('.modal-backdrop').remove();
                        }
                    },
                    error: function () {
                        // Close the modal and remove the backdrop in case of an error
                        modal.modal('hide');
                        $('.modal-backdrop').remove();

                        Swal.fire({
                            title: 'Error!',
                            text: 'There was a problem with the request.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });
        });
    });
</script>

<style>
    .modal-dialog.modal-lg-custom {
        max-width: 500px;
    }

    .edit-modal-content {
        padding: 20px;
    }

    #chat-container {
        width: 300px;
        border: 1px solid #ccc;
        position: fixed;
        bottom: 10%;
        right: 20px;
        background-color: #f9f9f9;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        z-index: 6;
    }

    #chat-header {
        background-color: #007bff;
        color: white;
        padding: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    #chat-box {
        display: none;
        padding: 10px;
    }

        #chat-box.visible {
            display: block;
        }

    #messages {
        /* width: 100%; */
        height: 300px;
        overflow-y: auto;
        margin-bottom: 10px;
        border: 1px solid #ddd;
        padding: 5px;
    }

    #chat-input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

</style>
