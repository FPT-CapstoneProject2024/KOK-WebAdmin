@page
@model WebAdmin.Pages.Song.IndexModel
@{
    ViewData["Title"] = "Index";
}

<!--Search-->
<div class="input-group">
    <form method="post" class="input-group">
        <input name="txt_search" type="search" class="form-control rounded" placeholder="Search..." value="@ViewBag.filter_search" aria-label="Search..." aria-describedby="search-addon" />
        <span class="input-group-text border-0" id="search-addon">
@*             <select class="form-control form-control-sm" aria-label="account filter" name="txt_filter">
                <option value="SongId" selected>Song Id</option>
                <option value="SongName">Song Name</option>
                <option value="SongDescription">Song Description</option>
                <option value="SongStatus">Song Status</option>
                <option value="SongCode">Song Code</option>
                <option value="CreatorId">Creator Id</option>
                <option value="Price">Price</option>
            </select> *@
        </span>
        <button asp-page-handler="Search" type="submit" class="btn btn-outline-success" data-mdb-ripple-init>Search</button>

    </form>
</div>
<!--End Search-->

<h1>Song</h1>
<p>
    <a href="/Song/Create">Create New </a>


</p>

<div class="table-container">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>Song Name</th>
                <th>Song Description</th>
                <th>Song Status</th>
                <th>Song Code</th>     
                <th>Price</th>
                <th>Genre</th>
                <th>Singer</th>
                <th>Artist</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.data.Results != null)
            {
                int count = 0;
                @foreach (var item in Model.data.Results)
                {
                    <tr>
                        <td>@(count += 1)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SongName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SongDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SongStatus)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SongCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Genre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Singer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Artist)
                        </td>
                        <td>
                            @* <a asp-page="./Edit" asp-route-id="@item.SongId">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.SongId">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.SongId">Delete</a> *@
                            <button type="button" class="btn btn-link" data-toggle="modal" data-target="#editSongModal" data-id="@item.SongId">Edit</button>
                            <button type="button" class="btn btn-link" onclick="location.href='@Url.Page("./Details", new { id = item.SongId })'">Details</button>
                            <button type="button" class="btn btn-link" onclick="location.href='@Url.Page("./Delete", new { id = item.SongId })'">Delete</button>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>

</div>

<div>

    <!--End Table-->
    <!--Paging-->
    <div class="pagination">
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage - 1)" class="page-link">&laquo;</a></li>
        <li class="page-item active"><a asp-route-number="@Model.CurrentPage" class="page-link">@Model.CurrentPage</a></li>
        <li class="page-item"><a asp-route-number="@(Model.CurrentPage + 1)" class="page-link">&raquo;</a></li>
    </div>
    <!--End Paging-->
</div>

<div class="modal-container">
    <!-- Create Modal -->
    <div class="modal fade" id="createSongModal" tabindex="-1" role="dialog" aria-labelledby="createSongModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createSongModalLabel">Create New Song</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <!-- Form for creating new song -->
                    <div class="create-form">
                        <!-- The content of the Create page will be loaded here -->
                    </div>

                    <!-- Live search section -->
                    <div class="modal-body-search">
                        <div id="liveSearchResults" class="search-results"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editSongModal" tabindex="-1" role="dialog" aria-labelledby="editSongModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg-custom" role="document">
        <div class="modal-content edit-modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSongModalLabel">Edit Song</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="edit-modal-body">
                <!-- The content of the Edit page will be loaded here -->

            </div>
        </div>
    </div>
</div>

<script>
    $('#createSongModal').on('show.bs.modal', function (e) {
        var modal = $(this);
        // Load only the form content from the Create page
        $.get('@Url.Page("./Create")', function (data) {
            var formContent = $(data).find('form');
            modal.find('.create-form').html(formContent);
        });
    });

    //Load Edit form content into the modal
    $('#editSongModal').on('show.bs.modal', function (e) {
        var button = $(e.relatedTarget);
        var songId = button.data('id');
        var modal = $(this);

        //Load the edit form from the Edit page
        $.get('@Url.Page("./Edit", new { id = "__ID__" })'.replace('__ID__', songId), function (data) {
            var formContent = $(data).find('form');
            modal.find('.edit-modal-body').html(formContent);
        });
    });
</script>

<script>
    async function liveSearchArtist(searchBox) {
        const query = searchBox.value;
        console.log(query);
        if (query.length < 1) {
            document.getElementById('searchArtistResults').innerHTML = '';
            return;
        }
        //const response = await fetch('./Index?handler=SearchArtist&query=' + query);
        const response = await fetch('./Song/Index?handler=SearchArtist&query=' + query);
        const data = await response.text();

        // Trigger the modal
        $('#liveSearchModal').modal('show');
        document.getElementById('liveSearchResults').innerHTML = data;
    }

    async function liveSearchSinger(searchBox) {
        const query = searchBox.value;
        console.log(query);
        if (query.length < 1) {
            document.getElementById('searchSingerResults').innerHTML = '';
            return;
        }
        //const response = await fetch('./Index?handler=SearchSinger&query=' + query);
        const response = await fetch('./Song/Index?handler=SearchSinger&query=' + query);
        const data = await response.text();

        // Trigger the modal
        $('#liveSearchModal').modal('show');
        document.getElementById('liveSearchResults').innerHTML = data;
    }


    async function liveSearchGenre(searchBox) {
        const query = searchBox.value;
        console.log(query);
        if (query.length < 1) {
            document.getElementById('searchGenreResults').innerHTML = '';
            return;
        }
        //const response = await fetch('./Index?handler=SearchGenre&query=' + query);
        const response = await fetch('./Song/Index?handler=SearchGenre&query=' + query);
        const data = await response.text();

        // Trigger the modal
        $('#liveSearchModal').modal('show');
        document.getElementById('liveSearchResults').innerHTML = data;
    }

    $(document).ready(function () {
        // Handle form submissions with class 'artist-form'
        $(document).on('submit', 'form[asp-page-handler="AddArtist"]', function (event) {
            event.preventDefault(); // Prevent default form submission

            var $form = $(this);
            var url = $form.attr('action'); // Adjust the URL as needed
            var formData = $form.serialize();

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function (response) {
                    // Update the content of #artistSelect with the response
                    $('#artistSelect').html(response);
                },
                error: function (xhr, status, error) {
                    console.error('AJAX error:', error);
                }
            });
        });
    });
</script>


<style>
    /* Ensure the modal is properly positioned and has a custom width */
    .modal-dialog {
        max-width: 80vw; /* Set the maximum width to 80% of viewport width */
    }

    /* Style for the modal body to make the create form wider */
    .modal-body {
        display: flex; /* Arrange items horizontally */
        gap: 20px; /* Space between the form and search results */
        width: 100%; /* Ensure it takes the full width of the modal */
    }

    /* Style for form section */
    .create-form {
        flex: 2; /* Take up more space horizontally */
        max-height: 80vh; /* Limit the height to avoid overflow */
        overflow-y: auto; /* Add vertical scrollbar if needed */
        padding: 10px; /* Optional: Add padding to the form section */
        width: 70%; /* Make the create form section wider */
    }

    /* Style for search results section */
    .modal-body-search {
        display: grid;
        grid-template-columns: 1fr;
        flex: 1; /* Take up remaining space horizontally */
        max-height: 80vh; /* Limit the height to avoid overflow */
        overflow-y: auto; /* Add vertical scrollbar if needed */
        padding: 10px; /* Optional: Add padding to the search results section */
    }

    /* Optional: Style for search results */
    .search-results {
        width: 100%; /* Take full width of the modal body */
        max-width: 600px; /* Maximum width for the search results */
        margin: 0 auto; /* Center horizontally if not using flex */
        text-align: center; /* Center text content inside */

        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .modal-dialog.modal-lg-custom {
        max-width: 500px;
    }

    .edit-modal-content {
        padding: 20px;
    }
</style>